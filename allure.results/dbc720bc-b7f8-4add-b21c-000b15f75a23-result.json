{"name": "test_OrangeHRm_login_001", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: Microsoft Edge failed to start: crashed.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from msedge location C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe is no longer running, so msedgedriver is assuming that msedge has crashed.)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x00007FF7CD935372+69586]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7CD8C55B2+760242]\n\t(No symbol) [0x00007FF7CD67B80C]\n\t(No symbol) [0x00007FF7CD6ACB9B]\n\t(No symbol) [0x00007FF7CD6A7C71]\n\t(No symbol) [0x00007FF7CD6EB371]\n\t(No symbol) [0x00007FF7CD6E2AC3]\n\t(No symbol) [0x00007FF7CD6B57DE]\n\t(No symbol) [0x00007FF7CD6B4AAB]\n\t(No symbol) [0x00007FF7CD6B5F64]\n\tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF7CDB0D179+1294553]\n\t(No symbol) [0x00007FF7CD734934]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7CD813D31+33073]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7CD80C349+1865]\n\tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF7CDB0BD51+1289393]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7CD8CDBB8+20184]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7CD8CA244+5476]\n\tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7CD8CA33C+5724]\n\tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7CD8BEBF1+733169]\n\tBaseThreadInitThunk [0x00007FFBC2B67BD4+20]\n\tRtlUserThreadStart [0x00007FFBC47ECED1+33]", "trace": ">   ???\n\nD:\\automation testing\\PYCHARM\\Credkart_My_Project\\Test_Case\\conftest.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Users\\Shree\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\edge\\webdriver.py:49: in __init__\n    super().__init__(\nC:\\Users\\Shree\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:54: in __init__\n    super().__init__(\nC:\\Users\\Shree\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:206: in __init__\n    self.start_session(capabilities)\nC:\\Users\\Shree\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:291: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\nC:\\Users\\Shree\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000026BF8139190>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: Microsoft Edge failed to start: ...8BEBF1+733169]\\\\n\\\\tBaseThreadInitThunk [0x00007FFBC2B67BD4+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFBC47ECED1+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: Microsoft Edge failed to start: crashed.\nE         (unknown error: DevToolsActivePort file doesn't exist)\nE         (The process started from msedge location C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe is no longer running, so msedgedriver is assuming that msedge has crashed.)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x00007FF7CD935372+69586]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7CD8C55B2+760242]\nE       \t(No symbol) [0x00007FF7CD67B80C]\nE       \t(No symbol) [0x00007FF7CD6ACB9B]\nE       \t(No symbol) [0x00007FF7CD6A7C71]\nE       \t(No symbol) [0x00007FF7CD6EB371]\nE       \t(No symbol) [0x00007FF7CD6E2AC3]\nE       \t(No symbol) [0x00007FF7CD6B57DE]\nE       \t(No symbol) [0x00007FF7CD6B4AAB]\nE       \t(No symbol) [0x00007FF7CD6B5F64]\nE       \tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF7CDB0D179+1294553]\nE       \t(No symbol) [0x00007FF7CD734934]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7CD813D31+33073]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7CD80C349+1865]\nE       \tMicrosoft::Applications::Events::ILogManager::DispatchEventBroadcast [0x00007FF7CDB0BD51+1289393]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7CD8CDBB8+20184]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7CD8CA244+5476]\nE       \tMicrosoft::Applications::Events::ILogConfiguration::operator* [0x00007FF7CD8CA33C+5724]\nE       \tMicrosoft::Applications::Events::EventProperty::~EventProperty [0x00007FF7CD8BEBF1+733169]\nE       \tBaseThreadInitThunk [0x00007FFBC2B67BD4+20]\nE       \tRtlUserThreadStart [0x00007FFBC47ECED1+33]\n\nC:\\Users\\Shree\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: WebDriverException"}, "start": 1690991660733, "stop": 1690991660733, "uuid": "61d7b4cb-8a56-44b2-aabb-b77f671f6fdc", "historyId": "9ade34501554f64899a4fc9a6c174318", "testCaseId": "9ade34501554f64899a4fc9a6c174318", "fullName": "Test_Case.test_login_OrangeHRM.Test_OranfeHRm_001#test_OrangeHRm_login_001", "labels": [{"name": "parentSuite", "value": "Test_Case"}, {"name": "suite", "value": "test_login_OrangeHRM"}, {"name": "subSuite", "value": "Test_OranfeHRm_001"}, {"name": "host", "value": "DESKTOP-QRGRBTF"}, {"name": "thread", "value": "2948-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Case.test_login_OrangeHRM"}]}